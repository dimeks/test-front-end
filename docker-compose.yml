version: "3.3"
services:
  api:
    container_name: icasei_api
    build:
      context: "./api"
      dockerfile: docker/dev
    command: bash -c "npm run start:dev"
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    volumes:
      - ./api:/usr/src
    ports:
      - "3000:3000"
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - icasei-network

  webapp:
    container_name: icasei_webapp
    build:
      context: "./webapp"
      dockerfile: docker/dev
    command: npm run dev
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    volumes:
      - ./webapp:/usr/src
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - icasei-network

  postgres:
    container_name: icasei_postgres
    image: "postgres:13"
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    volumes:
      - ./data/postgres:/data/db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dev" ]
      interval: 5s
      timeout: 10s
      retries: 2
    environment:
      POSTGRES_USER: "dev"
      POSTGRES_PASSWORD: "dev"
      POSTGRES_DB: "dev"
    restart: always
    networks:
      - icasei-network

  pgadmin:
    container_name: "icasei_pgadmin4"
    image: dpage/pgadmin4
    logging:
      options:
        max-size: "5m"
        max-file: "3"
    environment:
      PGADMIN_DEFAULT_EMAIL: "willychagasf@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "dev"
    ports:
      - "16544:80"
    depends_on:
      - postgres
    networks:
      - icasei-network

networks:
  icasei-network:
    driver: bridge
